{"version":3,"file":"server.mjs","sources":["../../../../../../../modules/common/clover/server/src/custom-resource-loader.ts","../../../../../../../modules/common/clover/server/src/inline-css-processor.ts","../../../../../../../modules/common/clover/server/src/stubs.ts","../../../../../../../modules/common/clover/server/src/server-engine.ts","../../../../../../../modules/common/clover/server/public_api.ts","../../../../../../../modules/common/clover/server/index.ts","../../../../../../../modules/common/clover/server/server.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { promises } from 'fs';\nimport { AbortablePromise, FetchOptions, ResourceLoader } from 'jsdom';\nimport { normalize } from 'path';\n\nexport class CustomResourceLoader extends ResourceLoader {\n  constructor(\n    private readonly baseUrl: string,\n    private readonly publicPath: string,\n    private readonly fileCache: Map<string, Buffer>,\n  ) {\n    super();\n  }\n\n  fetch(url: string, _options: FetchOptions): AbortablePromise<Buffer> | null {\n    if (!url.endsWith('.js') || !url.startsWith(this.baseUrl)) {\n      return null;\n    }\n\n    const path = normalize(url.replace(this.baseUrl, this.publicPath));\n    if (this.fileCache.has(path)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const filePromise = Promise.resolve(this.fileCache.get(path)!) as AbortablePromise<Buffer>;\n      filePromise.abort = () => undefined;\n\n      return filePromise;\n    }\n\n    const promise = promises.readFile(path, 'utf-8').then((content) => {\n      if (path.includes('runtime.')) {\n        // JSDOM doesn't support type=module, which will be added to lazy loaded scripts.\n        // https://github.com/jsdom/jsdom/issues/2475\n        content = content.replace(/\\.type\\s?=\\s?['\"]module[\"']/, '');\n      }\n\n      this.fileCache.set(path, Buffer.from(content));\n\n      return content;\n    }) as AbortablePromise<Buffer>;\n\n    promise.abort = () => undefined;\n\n    return promise;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport Critters from 'critters';\nimport { promises } from 'fs';\n\nexport interface InlineCriticalCssProcessOptions {\n  outputPath?: string;\n}\n\nexport interface InlineCriticalCssProcessorOptions {\n  minify?: boolean;\n  deployUrl?: string;\n}\n\nexport interface InlineCriticalCssResult {\n  content: string;\n  warnings?: string[];\n  errors?: string[];\n}\n\nclass CrittersExtended extends Critters {\n  readonly warnings: string[] = [];\n  readonly errors: string[] = [];\n\n  constructor(\n    private readonly optionsExtended: InlineCriticalCssProcessorOptions &\n      InlineCriticalCssProcessOptions,\n    private readonly resourceCache: Map<string, Buffer>,\n  ) {\n    super({\n      logger: {\n        warn: (s: string) => this.warnings.push(s),\n        error: (s: string) => this.errors.push(s),\n        info: () => {},\n      },\n      logLevel: 'warn',\n      path: optionsExtended.outputPath,\n      publicPath: optionsExtended.deployUrl,\n      compress: !!optionsExtended.minify,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      preload: 'media',\n      noscriptFallback: true,\n      inlineFonts: true,\n    });\n  }\n\n  public override async readFile(path: string): Promise<string> {\n    let resourceContent = this.resourceCache.get(path);\n    if (resourceContent === undefined) {\n      resourceContent = await promises.readFile(path);\n      this.resourceCache.set(path, resourceContent);\n    }\n\n    return resourceContent.toString();\n  }\n}\n\nexport class InlineCriticalCssProcessor {\n  constructor(\n    protected readonly options: InlineCriticalCssProcessorOptions,\n    private readonly resourceCache: Map<string, Buffer>,\n  ) {}\n\n  async process(\n    html: string,\n    options: InlineCriticalCssProcessOptions,\n  ): Promise<InlineCriticalCssResult> {\n    const critters = new CrittersExtended({ ...this.options, ...options }, this.resourceCache);\n    const content = await critters.process(html);\n\n    return {\n      content,\n      errors: critters.errors.length ? critters.errors : undefined,\n      warnings: critters.warnings.length ? critters.warnings : undefined,\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOMWindow } from 'jsdom';\n\nfunction noop(): void {}\n\nexport function augmentWindowWithStubs(window: DOMWindow): void {\n  window.resizeBy = noop;\n  window.resizeTo = noop;\n  window.scroll = noop;\n  window.scrollBy = noop;\n  window.scrollTo = noop;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ɵNGRenderMode as NGRenderMode,\n  ɵNGRenderModeAPI as NGRenderModeAPI,\n} from '@nguniversal/common/clover';\nimport * as fs from 'fs';\nimport { JSDOM } from 'jsdom';\nimport * as path from 'path';\nimport { URL } from 'url';\nimport { CustomResourceLoader } from './custom-resource-loader';\nimport { InlineCriticalCssProcessor } from './inline-css-processor';\nimport { augmentWindowWithStubs } from './stubs';\n\nexport interface RenderOptions {\n  headers?: Record<string, string | undefined | string[]>;\n  url: string;\n  inlineCriticalCss?: boolean;\n  htmlFilename?: string;\n  publicPath: string;\n}\n\nexport class Engine {\n  private readonly fileExistsCache = new Map<string, boolean>();\n  private readonly htmlFileCache = new Map<string, string>();\n  private readonly resourceLoaderCache = new Map<string, Buffer>();\n  private readonly inlineCriticalCssProcessor = new InlineCriticalCssProcessor(\n    { minify: true },\n    this.resourceLoaderCache,\n  );\n\n  async render(options: RenderOptions): Promise<string> {\n    const { pathname, origin } = new URL(options.url);\n    const prerenderedSnapshot = await this.getPrerenderedSnapshot(options.publicPath, pathname);\n\n    if (prerenderedSnapshot) {\n      return prerenderedSnapshot;\n    }\n\n    let htmlContent = await this.getHtmlTemplate(\n      options.publicPath,\n      pathname,\n      options.htmlFilename,\n    );\n    const inlineCriticalCss = options.inlineCriticalCss !== false;\n\n    const customResourceLoader = new CustomResourceLoader(\n      origin,\n      options.publicPath,\n      this.resourceLoaderCache,\n    );\n\n    let dom: JSDOM | undefined;\n\n    if (inlineCriticalCss) {\n      // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n      htmlContent = htmlContent.replace(\n        / media=\"print\" onload=\"this\\.media='all'\"><noscript><link .+?><\\/noscript>/g,\n        '>',\n      );\n    }\n\n    // JSDOM doesn't support type=module\n    // https://github.com/jsdom/jsdom/issues/2475\n    htmlContent = htmlContent.replace(/ type=\"module\"/g, '');\n\n    try {\n      dom = new JSDOM(htmlContent, {\n        runScripts: 'dangerously',\n        resources: customResourceLoader,\n        url: options.url,\n        referrer: options.headers?.referrer as string | undefined,\n        userAgent: options.headers?.['user-agent'] as string | undefined,\n        beforeParse: (window) => {\n          augmentWindowWithStubs(window);\n          window.ngRenderMode = true;\n        },\n      });\n\n      const doc = dom.window.document;\n\n      // 60s timeout.\n      const stablizationTimeout = setTimeout(() => {\n        throw new Error('Angular application failed to stablize after in time.');\n      }, 60000);\n\n      const ngRenderMode = await new Promise<NGRenderModeAPI>((resolve) => {\n        const interval = setInterval(() => {\n          const ngDOMMode = dom?.window.ngRenderMode as NGRenderMode;\n          if (ngDOMMode && typeof ngDOMMode === 'object') {\n            // Poll until ngDOMMode is an object.\n            clearTimeout(stablizationTimeout);\n            clearInterval(interval);\n            resolve(ngDOMMode);\n          }\n        }, 30);\n      });\n\n      await ngRenderMode.getWhenStable();\n      doc.querySelector('[ng-version]')?.setAttribute('ng-clover', '');\n\n      // Add Angular state\n      const state = ngRenderMode.getSerializedState();\n      if (state) {\n        const script = doc.createElement('script');\n        script.id = `${ngRenderMode.appId}-state`;\n        script.setAttribute('type', 'application/json');\n        script.textContent = state;\n        doc.body.appendChild(script);\n      }\n\n      const content = dom.serialize();\n      if (!inlineCriticalCss) {\n        return content;\n      }\n\n      const baseHref = doc.querySelector('base[href]')?.getAttribute('href') ?? '';\n      const {\n        content: contentWithInlineCSS,\n        warnings,\n        errors,\n      } = await this.inlineCriticalCssProcessor.process(content, {\n        outputPath: path.join(options.publicPath, baseHref),\n      });\n\n      // eslint-disable-next-line no-console\n      warnings?.forEach((m) => console.warn(m));\n      // eslint-disable-next-line no-console\n      errors?.forEach((m) => console.error(m));\n\n      return contentWithInlineCSS;\n    } finally {\n      dom?.window.close();\n    }\n  }\n\n  private async getPrerenderedSnapshot(\n    publicPath: string,\n    pathname: string,\n  ): Promise<string | undefined> {\n    // Remove leading forward slash.\n    const pagePath = path.resolve(publicPath, pathname.substring(1), 'index.html');\n    const content = await this.readHTMLFile(pagePath);\n\n    return content?.includes('ng-version=')\n      ? content // Page is pre-rendered\n      : undefined;\n  }\n\n  private async getHtmlTemplate(\n    publicPath: string,\n    pathname: string,\n    htmlFilename = 'index.html',\n  ): Promise<string> {\n    const files = [path.join(publicPath, htmlFilename)];\n\n    const potentialLocalePath = pathname.split('/', 2)[1]; // potential base href\n    if (potentialLocalePath) {\n      files.push(path.join(publicPath, potentialLocalePath, htmlFilename));\n    }\n\n    for (const file of files) {\n      const content = await this.readHTMLFile(file);\n      if (content) {\n        return content;\n      }\n    }\n\n    throw new Error(`Cannot file HTML file. Looked in: ${files.join(', ')}`);\n  }\n\n  private async fileExists(filePath: string): Promise<boolean> {\n    const fileExists = this.fileExistsCache.get(filePath);\n    if (fileExists === undefined) {\n      try {\n        await fs.promises.access(filePath, fs.constants.F_OK);\n        this.fileExistsCache.set(filePath, true);\n\n        return true;\n      } catch {\n        this.fileExistsCache.set(filePath, false);\n\n        return false;\n      }\n    }\n\n    return fileExists;\n  }\n\n  private async readHTMLFile(filePath: string): Promise<string | undefined> {\n    if (this.htmlFileCache.has(filePath)) {\n      return this.htmlFileCache.get(filePath);\n    }\n\n    if (await this.fileExists(filePath)) {\n      const content = await fs.promises.readFile(filePath, 'utf-8');\n      this.htmlFileCache.set(filePath, content);\n\n      return content;\n    }\n\n    return undefined;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { RenderOptions, Engine } from './src/server-engine';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;MAYa,oBAAqB,SAAQ,cAAc;IACtD,YACmB,OAAe,EACf,UAAkB,EAClB,SAA8B;QAE/C,KAAK,EAAE,CAAC;QAJS,YAAO,GAAP,OAAO,CAAQ;QACf,eAAU,GAAV,UAAU,CAAQ;QAClB,cAAS,GAAT,SAAS,CAAqB;KAGhD;IAED,KAAK,CAAC,GAAW,EAAE,QAAsB;QACvC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACzD,OAAO,IAAI,CAAC;SACb;QAED,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACnE,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;;YAE5B,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAE,CAA6B,CAAC;YAC3F,WAAW,CAAC,KAAK,GAAG,MAAM,SAAS,CAAC;YAEpC,OAAO,WAAW,CAAC;SACpB;QAED,MAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO;YAC5D,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;;;gBAG7B,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,6BAA6B,EAAE,EAAE,CAAC,CAAC;aAC9D;YAED,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAE/C,OAAO,OAAO,CAAC;SAChB,CAA6B,CAAC;QAE/B,OAAO,CAAC,KAAK,GAAG,MAAM,SAAS,CAAC;QAEhC,OAAO,OAAO,CAAC;KAChB;;;AClDH;;;;;;;AA0BA,MAAM,gBAAiB,SAAQ,QAAQ;IAIrC,YACmB,eACgB,EAChB,aAAkC;QAEnD,KAAK,CAAC;YACJ,MAAM,EAAE;gBACN,IAAI,EAAE,CAAC,CAAS,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1C,KAAK,EAAE,CAAC,CAAS,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzC,IAAI,EAAE,SAAQ;aACf;YACD,QAAQ,EAAE,MAAM;YAChB,IAAI,EAAE,eAAe,CAAC,UAAU;YAChC,UAAU,EAAE,eAAe,CAAC,SAAS;YACrC,QAAQ,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM;YAClC,WAAW,EAAE,KAAK;YAClB,kBAAkB,EAAE,KAAK;YACzB,gBAAgB,EAAE,KAAK;YACvB,OAAO,EAAE,OAAO;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;QApBc,oBAAe,GAAf,eAAe,CACC;QAChB,kBAAa,GAAb,aAAa,CAAqB;QAN5C,aAAQ,GAAa,EAAE,CAAC;QACxB,WAAM,GAAa,EAAE,CAAC;KAwB9B;IAEe,MAAM,QAAQ,CAAC,IAAY;QACzC,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,eAAe,KAAK,SAAS,EAAE;YACjC,eAAe,GAAG,MAAM,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;SAC/C;QAED,OAAO,eAAe,CAAC,QAAQ,EAAE,CAAC;KACnC;CACF;MAEY,0BAA0B;IACrC,YACqB,OAA0C,EAC5C,aAAkC;QADhC,YAAO,GAAP,OAAO,CAAmC;QAC5C,kBAAa,GAAb,aAAa,CAAqB;KACjD;IAEJ,MAAM,OAAO,CACX,IAAY,EACZ,OAAwC;QAExC,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3F,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE7C,OAAO;YACL,OAAO;YACP,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,SAAS;YAC5D,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,GAAG,SAAS;SACnE,CAAC;KACH;;;ACnFH;;;;;;;AAUA,SAAS,IAAI,MAAW;SAER,sBAAsB,CAAC,MAAiB;IACtD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB;;AClBA;;;;;;;MA4Ba,MAAM;IAAnB;QACmB,oBAAe,GAAG,IAAI,GAAG,EAAmB,CAAC;QAC7C,kBAAa,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC1C,wBAAmB,GAAG,IAAI,GAAG,EAAkB,CAAC;QAChD,+BAA0B,GAAG,IAAI,0BAA0B,CAC1E,EAAE,MAAM,EAAE,IAAI,EAAE,EAChB,IAAI,CAAC,mBAAmB,CACzB,CAAC;KA8KH;IA5KC,MAAM,MAAM,CAAC,OAAsB;QACjC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClD,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAE5F,IAAI,mBAAmB,EAAE;YACvB,OAAO,mBAAmB,CAAC;SAC5B;QAED,IAAI,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAC1C,OAAO,CAAC,UAAU,EAClB,QAAQ,EACR,OAAO,CAAC,YAAY,CACrB,CAAC;QACF,MAAM,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,KAAK,KAAK,CAAC;QAE9D,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,CACnD,MAAM,EACN,OAAO,CAAC,UAAU,EAClB,IAAI,CAAC,mBAAmB,CACzB,CAAC;QAEF,IAAI,GAAsB,CAAC;QAE3B,IAAI,iBAAiB,EAAE;;YAErB,WAAW,GAAG,WAAW,CAAC,OAAO,CAC/B,6EAA6E,EAC7E,GAAG,CACJ,CAAC;SACH;;;QAID,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;QAEzD,IAAI;YACF,GAAG,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE;gBAC3B,UAAU,EAAE,aAAa;gBACzB,SAAS,EAAE,oBAAoB;gBAC/B,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,QAAQ,EAAE,OAAO,CAAC,OAAO,EAAE,QAA8B;gBACzD,SAAS,EAAE,OAAO,CAAC,OAAO,GAAG,YAAY,CAAuB;gBAChE,WAAW,EAAE,CAAC,MAAM;oBAClB,sBAAsB,CAAC,MAAM,CAAC,CAAC;oBAC/B,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC5B;aACF,CAAC,CAAC;YAEH,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;;YAGhC,MAAM,mBAAmB,GAAG,UAAU,CAAC;gBACrC,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;aAC1E,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,YAAY,GAAG,MAAM,IAAI,OAAO,CAAkB,CAAC,OAAO;gBAC9D,MAAM,QAAQ,GAAG,WAAW,CAAC;oBAC3B,MAAM,SAAS,GAAG,GAAG,EAAE,MAAM,CAAC,YAA4B,CAAC;oBAC3D,IAAI,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;;wBAE9C,YAAY,CAAC,mBAAmB,CAAC,CAAC;wBAClC,aAAa,CAAC,QAAQ,CAAC,CAAC;wBACxB,OAAO,CAAC,SAAS,CAAC,CAAC;qBACpB;iBACF,EAAE,EAAE,CAAC,CAAC;aACR,CAAC,CAAC;YAEH,MAAM,YAAY,CAAC,aAAa,EAAE,CAAC;YACnC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;;YAGjE,MAAM,KAAK,GAAG,YAAY,CAAC,kBAAkB,EAAE,CAAC;YAChD,IAAI,KAAK,EAAE;gBACT,MAAM,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC3C,MAAM,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,KAAK,QAAQ,CAAC;gBAC1C,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;gBAChD,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC3B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC9B;YAED,MAAM,OAAO,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO,OAAO,CAAC;aAChB;YAED,MAAM,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAC7E,MAAM,EACJ,OAAO,EAAE,oBAAoB,EAC7B,QAAQ,EACR,MAAM,GACP,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,OAAO,EAAE;gBACzD,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC;aACpD,CAAC,CAAC;;YAGH,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;YAE1C,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEzC,OAAO,oBAAoB,CAAC;SAC7B;gBAAS;YACR,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC;SACrB;KACF;IAEO,MAAM,sBAAsB,CAClC,UAAkB,EAClB,QAAgB;;QAGhB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QAC/E,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAElD,OAAO,OAAO,EAAE,QAAQ,CAAC,aAAa,CAAC;cACnC,OAAO;cACP,SAAS,CAAC;KACf;IAEO,MAAM,eAAe,CAC3B,UAAkB,EAClB,QAAgB,EAChB,YAAY,GAAG,YAAY;QAE3B,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;QAEpD,MAAM,mBAAmB,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,mBAAmB,EAAE;YACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC;SACtE;QAED,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,OAAO,EAAE;gBACX,OAAO,OAAO,CAAC;aAChB;SACF;QAED,MAAM,IAAI,KAAK,CAAC,qCAAqC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1E;IAEO,MAAM,UAAU,CAAC,QAAgB;QACvC,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,IAAI;gBACF,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAEzC,OAAO,IAAI,CAAC;aACb;YAAC,MAAM;gBACN,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAE1C,OAAO,KAAK,CAAC;aACd;SACF;QAED,OAAO,UAAU,CAAC;KACnB;IAEO,MAAM,YAAY,CAAC,QAAgB;QACzC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzC;QAED,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACnC,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC9D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAE1C,OAAO,OAAO,CAAC;SAChB;QAED,OAAO,SAAS,CAAC;KAClB;;;AChNH;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;"}