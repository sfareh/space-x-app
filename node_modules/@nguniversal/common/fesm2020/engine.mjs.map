{"version":3,"file":"engine.mjs","sources":["../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/public_api.ts","../../../../../../modules/common/engine/index.ts","../../../../../../modules/common/engine/engine.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport type { StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, renderModule } from '@angular/platform-server';\nimport { ÉµInlineCriticalCssProcessor as InlineCriticalCssProcessor } from '@nguniversal/common/tools';\nimport * as fs from 'fs';\nimport { dirname, resolve } from 'path';\nimport { URL } from 'url';\n\n/** These are the allowed options for the render */\nexport interface RenderOptions {\n  bootstrap: Type<{}>;\n  providers?: StaticProvider[];\n  url?: string;\n  document?: string;\n  documentFilePath?: string;\n  /**\n   * Reduce render blocking requests by inlining critical CSS.\n   * Defaults to true.\n   */\n  inlineCriticalCss?: boolean;\n  /**\n   * Base path location of index file.\n   * Defaults to the 'documentFilePath' dirname when not provided.\n   */\n  publicPath?: string;\n}\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n  private readonly templateCache = new Map<string, string>();\n  private readonly inlineCriticalCssProcessor: InlineCriticalCssProcessor;\n  private readonly pageExists = new Map<string, boolean>();\n\n  constructor(private module?: Type<{}>, private providers: StaticProvider[] = []) {\n    this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor({\n      minify: true,\n    });\n  }\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    const { inlineCriticalCss = true } = opts;\n\n    if (opts.publicPath && opts.documentFilePath && opts.url !== undefined) {\n      const url = new URL(opts.url);\n      // Remove leading forward slash.\n      const pathname = url.pathname.substring(1);\n      const pagePath = resolve(opts.publicPath, pathname, 'index.html');\n\n      if (pagePath !== resolve(opts.documentFilePath)) {\n        // View path doesn't match with prerender path.\n        let pageExists = this.pageExists.get(pagePath);\n        if (pageExists === undefined) {\n          pageExists = await exists(pagePath);\n          this.pageExists.set(pagePath, pageExists);\n        }\n\n        if (pageExists) {\n          // Serve pre-rendered page.\n          return fs.promises.readFile(pagePath, 'utf-8');\n        }\n      }\n    }\n\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const extraProviders = [...(opts.providers || []), ...(this.providers || [])];\n\n    let doc = opts.document;\n    if (!doc && opts.documentFilePath) {\n      doc = await this.getDocument(opts.documentFilePath);\n    }\n\n    if (doc) {\n      extraProviders.push({\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: inlineCriticalCss\n            ? // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n              doc.replace(\n                / media=\"print\" onload=\"this\\.media='all'\"><noscript><link .+?><\\/noscript>/g,\n                '>',\n              )\n            : doc,\n          url: opts.url,\n        },\n      });\n    }\n\n    const moduleOrFactory = this.module || opts.bootstrap;\n    const html = await renderModule(moduleOrFactory, { extraProviders });\n    if (!inlineCriticalCss) {\n      return html;\n    }\n\n    const { content, errors, warnings } = await this.inlineCriticalCssProcessor.process(html, {\n      outputPath: opts.publicPath ?? (opts.documentFilePath ? dirname(opts.documentFilePath) : ''),\n    });\n\n    // eslint-disable-next-line no-console\n    warnings?.forEach((m) => console.warn(m));\n    // eslint-disable-next-line no-console\n    errors?.forEach((m) => console.error(m));\n\n    return content;\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private async getDocument(filePath: string): Promise<string> {\n    let doc = this.templateCache.get(filePath);\n\n    if (!doc) {\n      doc = await fs.promises.readFile(filePath, 'utf-8');\n      this.templateCache.set(filePath, doc);\n    }\n\n    return doc;\n  }\n}\n\nasync function exists(path: fs.PathLike): Promise<boolean> {\n  try {\n    await fs.promises.access(path, fs.constants.F_OK);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { CommonEngine, RenderOptions } from './src/engine';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InlineCriticalCssProcessor"],"mappings":"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"}